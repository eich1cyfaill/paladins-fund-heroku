{"ast":null,"code":"import { PlayerInfoTypes } from \"../../types/playerInfoTypes\";\nconst initialState = {\n  isPlayerNameNotFound: false,\n  isMatchHistoryLoading: false,\n  isPlayerStatusLoading: false,\n  isPlayerChampionsLoading: false,\n  isPlayerInfoLoading: false,\n  matchHistory: [],\n  championRanks: [],\n  championRanksBatch: [],\n  isLoading: false,\n  level: 0,\n  PlatformName: '',\n  id: 0,\n  activePlayerId: 0,\n  avatarId: 0,\n  avatarURL: '',\n  createdDatetime: '',\n  hoursPlayed: 0,\n  hzPlayerName: '',\n  lastLoginDatetime: '',\n  losses: 0,\n  wins: 0,\n  masteryLevel: 0,\n  platform: 'Test Platform',\n  region: '',\n  status: 0,\n  statusDesc: '',\n  rankedStats: {\n    Losses: 0,\n    points: 0,\n    prevRank: 0,\n    rank: 0,\n    season: 0,\n    Tier: 0,\n    Wins: 0\n  },\n  currentPickedMatchId: 0\n};\n\nconst playerInfoReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case PlayerInfoTypes.FETCH_PLAYER:\n      return { ...state,\n        isLoading: true\n      };\n\n    case PlayerInfoTypes.FETCH_PLAYER_SUCCESS:\n      return { ...state,\n        isLoading: false,\n        isPlayerNameNotFound: false,\n        level: action.payload.Level,\n        PlatformName: action.payload.Name,\n        id: action.payload.Id,\n        activePlayerId: action.payload.ActivePlayerId,\n        avatarId: action.payload.AvatarId,\n        avatarURL: action.payload.AvatarURL,\n        createdDatetime: action.payload.Created_DateTime,\n        hoursPlayed: action.payload.HoursPlayed,\n        hzPlayerName: action.payload.hz_player_name,\n        lastLoginDatetime: action.payload.Last_Login_Datetime,\n        losses: action.payload.Losses,\n        wins: action.payload.Wins,\n        masteryLevel: action.payload.MasteryLevel,\n        platform: action.payload.Platform,\n        region: action.payload.Region,\n        rankedStats: action.payload.RankedKBM\n      };\n\n    case PlayerInfoTypes.FETCH_PLAYER_CHAMPION_RANKS:\n      return { ...state,\n        isPlayerChampionsLoading: true\n      };\n\n    case PlayerInfoTypes.FETCH_PLAYER_CHAMPION_RANKS_SUCCESS:\n      return { ...state,\n        championRanks: action.payload\n      };\n\n    case PlayerInfoTypes.FETCH_PLAYER_CHAMPION_RANKS_BATCH:\n      return { ...state,\n        championRanksBatch: action.payload,\n        isPlayerChampionsLoading: false\n      };\n\n    case PlayerInfoTypes.GET_PLAYER_STATUS:\n      return { ...state,\n        status: action.payload,\n        isPlayerStatusLoading: true\n      };\n\n    case PlayerInfoTypes.GET_PLAYER_STATUS_DESC:\n      return { ...state,\n        statusDesc: action.payload\n      };\n\n    case PlayerInfoTypes.GET_PLAYER_MATCH_HISTORY:\n      return { ...state,\n        isMatchHistoryLoading: true\n      };\n\n    case PlayerInfoTypes.GET_PLAYER_MATCH_HISTORY_SUCCESS:\n      return { ...state,\n        isMatchHistoryLoading: false,\n        matchHistory: action.payload\n      };\n\n    case PlayerInfoTypes.FETCH_PLAYER_ERROR:\n      return { ...state,\n        isPlayerNameNotFound: true,\n        isLoading: false\n      };\n\n    case PlayerInfoTypes.UNMOUNT_PLAYER_NOT_FOUND:\n      return { ...state,\n        isPlayerNameNotFound: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default playerInfoReducer;","map":{"version":3,"sources":["D:/PetPS/react-ts-paladins-fund/src/store/reducers/playerInfoReducer.ts"],"names":["PlayerInfoTypes","initialState","isPlayerNameNotFound","isMatchHistoryLoading","isPlayerStatusLoading","isPlayerChampionsLoading","isPlayerInfoLoading","matchHistory","championRanks","championRanksBatch","isLoading","level","PlatformName","id","activePlayerId","avatarId","avatarURL","createdDatetime","hoursPlayed","hzPlayerName","lastLoginDatetime","losses","wins","masteryLevel","platform","region","status","statusDesc","rankedStats","Losses","points","prevRank","rank","season","Tier","Wins","currentPickedMatchId","playerInfoReducer","state","action","type","FETCH_PLAYER","FETCH_PLAYER_SUCCESS","payload","Level","Name","Id","ActivePlayerId","AvatarId","AvatarURL","Created_DateTime","HoursPlayed","hz_player_name","Last_Login_Datetime","MasteryLevel","Platform","Region","RankedKBM","FETCH_PLAYER_CHAMPION_RANKS","FETCH_PLAYER_CHAMPION_RANKS_SUCCESS","FETCH_PLAYER_CHAMPION_RANKS_BATCH","GET_PLAYER_STATUS","GET_PLAYER_STATUS_DESC","GET_PLAYER_MATCH_HISTORY","GET_PLAYER_MATCH_HISTORY_SUCCESS","FETCH_PLAYER_ERROR","UNMOUNT_PLAYER_NOT_FOUND"],"mappings":"AAAA,SAA8BA,eAA9B,QAAqD,6BAArD;AAEA,MAAMC,YAAiC,GAAG;AACtCC,EAAAA,oBAAoB,EAAE,KADgB;AAEtCC,EAAAA,qBAAqB,EAAE,KAFe;AAGtCC,EAAAA,qBAAqB,EAAE,KAHe;AAItCC,EAAAA,wBAAwB,EAAE,KAJY;AAKtCC,EAAAA,mBAAmB,EAAE,KALiB;AAMtCC,EAAAA,YAAY,EAAE,EANwB;AAOtCC,EAAAA,aAAa,EAAE,EAPuB;AAQtCC,EAAAA,kBAAkB,EAAE,EARkB;AAStCC,EAAAA,SAAS,EAAE,KAT2B;AAUtCC,EAAAA,KAAK,EAAE,CAV+B;AAWtCC,EAAAA,YAAY,EAAE,EAXwB;AAYtCC,EAAAA,EAAE,EAAE,CAZkC;AAatCC,EAAAA,cAAc,EAAE,CAbsB;AActCC,EAAAA,QAAQ,EAAE,CAd4B;AAetCC,EAAAA,SAAS,EAAE,EAf2B;AAgBtCC,EAAAA,eAAe,EAAE,EAhBqB;AAiBtCC,EAAAA,WAAW,EAAE,CAjByB;AAkBtCC,EAAAA,YAAY,EAAE,EAlBwB;AAmBtCC,EAAAA,iBAAiB,EAAE,EAnBmB;AAoBtCC,EAAAA,MAAM,EAAE,CApB8B;AAqBtCC,EAAAA,IAAI,EAAE,CArBgC;AAsBtCC,EAAAA,YAAY,EAAE,CAtBwB;AAuBtCC,EAAAA,QAAQ,EAAE,eAvB4B;AAwBtCC,EAAAA,MAAM,EAAE,EAxB8B;AAyBtCC,EAAAA,MAAM,EAAE,CAzB8B;AA0BtCC,EAAAA,UAAU,EAAE,EA1B0B;AA2BtCC,EAAAA,WAAW,EAAE;AACTC,IAAAA,MAAM,EAAE,CADC;AAETC,IAAAA,MAAM,EAAE,CAFC;AAGTC,IAAAA,QAAQ,EAAE,CAHD;AAITC,IAAAA,IAAI,EAAE,CAJG;AAKTC,IAAAA,MAAM,EAAE,CALC;AAMTC,IAAAA,IAAI,EAAE,CANG;AAOTC,IAAAA,IAAI,EAAE;AAPG,GA3ByB;AAoCtCC,EAAAA,oBAAoB,EAAE;AApCgB,CAA1C;;AAuCA,MAAMC,iBAAiB,GAAG,YAA4D;AAAA,MAA3DC,KAA2D,uEAAnDrC,YAAmD;AAAA,MAArCsC,MAAqC;;AAClF,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKxC,eAAe,CAACyC,YAArB;AACI,aAAO,EAAC,GAAGH,KAAJ;AAAW5B,QAAAA,SAAS,EAAE;AAAtB,OAAP;;AACJ,SAAKV,eAAe,CAAC0C,oBAArB;AACI,aAAO,EAAC,GAAGJ,KAAJ;AAAW5B,QAAAA,SAAS,EAAE,KAAtB;AACHR,QAAAA,oBAAoB,EAAE,KADnB;AAEHS,QAAAA,KAAK,EAAE4B,MAAM,CAACI,OAAP,CAAeC,KAFnB;AAGHhC,QAAAA,YAAY,EAAE2B,MAAM,CAACI,OAAP,CAAeE,IAH1B;AAIHhC,QAAAA,EAAE,EAAE0B,MAAM,CAACI,OAAP,CAAeG,EAJhB;AAKHhC,QAAAA,cAAc,EAAEyB,MAAM,CAACI,OAAP,CAAeI,cAL5B;AAMHhC,QAAAA,QAAQ,EAAEwB,MAAM,CAACI,OAAP,CAAeK,QANtB;AAOHhC,QAAAA,SAAS,EAAEuB,MAAM,CAACI,OAAP,CAAeM,SAPvB;AAQHhC,QAAAA,eAAe,EAAEsB,MAAM,CAACI,OAAP,CAAeO,gBAR7B;AASHhC,QAAAA,WAAW,EAAEqB,MAAM,CAACI,OAAP,CAAeQ,WATzB;AAUHhC,QAAAA,YAAY,EAAEoB,MAAM,CAACI,OAAP,CAAeS,cAV1B;AAWHhC,QAAAA,iBAAiB,EAAEmB,MAAM,CAACI,OAAP,CAAeU,mBAX/B;AAYHhC,QAAAA,MAAM,EAAEkB,MAAM,CAACI,OAAP,CAAed,MAZpB;AAaHP,QAAAA,IAAI,EAAEiB,MAAM,CAACI,OAAP,CAAeR,IAblB;AAcHZ,QAAAA,YAAY,EAAEgB,MAAM,CAACI,OAAP,CAAeW,YAd1B;AAeH9B,QAAAA,QAAQ,EAAEe,MAAM,CAACI,OAAP,CAAeY,QAftB;AAgBH9B,QAAAA,MAAM,EAAEc,MAAM,CAACI,OAAP,CAAea,MAhBpB;AAiBH5B,QAAAA,WAAW,EAAEW,MAAM,CAACI,OAAP,CAAec;AAjBzB,OAAP;;AAmBJ,SAAKzD,eAAe,CAAC0D,2BAArB;AACI,aAAO,EAAC,GAAGpB,KAAJ;AAAWjC,QAAAA,wBAAwB,EAAE;AAArC,OAAP;;AACJ,SAAKL,eAAe,CAAC2D,mCAArB;AACI,aAAO,EAAC,GAAGrB,KAAJ;AAAW9B,QAAAA,aAAa,EAAE+B,MAAM,CAACI;AAAjC,OAAP;;AACJ,SAAK3C,eAAe,CAAC4D,iCAArB;AACI,aAAO,EAAC,GAAGtB,KAAJ;AAAW7B,QAAAA,kBAAkB,EAAE8B,MAAM,CAACI,OAAtC;AAA+CtC,QAAAA,wBAAwB,EAAE;AAAzE,OAAP;;AACJ,SAAKL,eAAe,CAAC6D,iBAArB;AACI,aAAO,EAAC,GAAGvB,KAAJ;AAAWZ,QAAAA,MAAM,EAAEa,MAAM,CAACI,OAA1B;AAAmCvC,QAAAA,qBAAqB,EAAE;AAA1D,OAAP;;AACJ,SAAKJ,eAAe,CAAC8D,sBAArB;AACI,aAAO,EAAC,GAAGxB,KAAJ;AAAWX,QAAAA,UAAU,EAAEY,MAAM,CAACI;AAA9B,OAAP;;AACJ,SAAK3C,eAAe,CAAC+D,wBAArB;AACI,aAAO,EAAC,GAAGzB,KAAJ;AAAWnC,QAAAA,qBAAqB,EAAE;AAAlC,OAAP;;AACJ,SAAKH,eAAe,CAACgE,gCAArB;AACI,aAAO,EAAC,GAAG1B,KAAJ;AAAWnC,QAAAA,qBAAqB,EAAE,KAAlC;AAAyCI,QAAAA,YAAY,EAAEgC,MAAM,CAACI;AAA9D,OAAP;;AACJ,SAAK3C,eAAe,CAACiE,kBAArB;AACI,aAAO,EAAC,GAAG3B,KAAJ;AAAWpC,QAAAA,oBAAoB,EAAE,IAAjC;AAAuCQ,QAAAA,SAAS,EAAE;AAAlD,OAAP;;AACJ,SAAKV,eAAe,CAACkE,wBAArB;AACI,aAAO,EAAC,GAAG5B,KAAJ;AAAWpC,QAAAA,oBAAoB,EAAE;AAAjC,OAAP;;AACJ;AACI,aAAOoC,KAAP;AA1CR;AA4CH,CA7CD;;AA+CA,eAAeD,iBAAf","sourcesContent":["import { IPlayerInfoIniState, PlayerInfoTypes } from \"../../types/playerInfoTypes\"\r\n\r\nconst initialState: IPlayerInfoIniState = {\r\n    isPlayerNameNotFound: false,\r\n    isMatchHistoryLoading: false,\r\n    isPlayerStatusLoading: false,\r\n    isPlayerChampionsLoading: false,\r\n    isPlayerInfoLoading: false,\r\n    matchHistory: [],\r\n    championRanks: [],\r\n    championRanksBatch: [],\r\n    isLoading: false,\r\n    level: 0,\r\n    PlatformName: '',\r\n    id: 0,\r\n    activePlayerId: 0,\r\n    avatarId: 0,\r\n    avatarURL: '',\r\n    createdDatetime: '',\r\n    hoursPlayed: 0,\r\n    hzPlayerName: '',\r\n    lastLoginDatetime: '',\r\n    losses: 0,\r\n    wins: 0,\r\n    masteryLevel: 0,\r\n    platform: 'Test Platform',\r\n    region: '',\r\n    status: 0,\r\n    statusDesc: '',\r\n    rankedStats: {\r\n        Losses: 0,\r\n        points: 0,\r\n        prevRank: 0,\r\n        rank: 0,\r\n        season: 0,\r\n        Tier: 0,\r\n        Wins: 0\r\n    },\r\n    currentPickedMatchId: 0\r\n}\r\n\r\nconst playerInfoReducer = (state = initialState, action: any): IPlayerInfoIniState => {\r\n    switch(action.type){\r\n        case PlayerInfoTypes.FETCH_PLAYER:\r\n            return {...state, isLoading: true}\r\n        case PlayerInfoTypes.FETCH_PLAYER_SUCCESS:\r\n            return {...state, isLoading: false,\r\n                isPlayerNameNotFound: false,\r\n                level: action.payload.Level,\r\n                PlatformName: action.payload.Name,\r\n                id: action.payload.Id,\r\n                activePlayerId: action.payload.ActivePlayerId,\r\n                avatarId: action.payload.AvatarId,\r\n                avatarURL: action.payload.AvatarURL,\r\n                createdDatetime: action.payload.Created_DateTime,\r\n                hoursPlayed: action.payload.HoursPlayed,\r\n                hzPlayerName: action.payload.hz_player_name,\r\n                lastLoginDatetime: action.payload.Last_Login_Datetime,\r\n                losses: action.payload.Losses,\r\n                wins: action.payload.Wins,\r\n                masteryLevel: action.payload.MasteryLevel,\r\n                platform: action.payload.Platform,\r\n                region: action.payload.Region,\r\n                rankedStats: action.payload.RankedKBM\r\n            }\r\n        case PlayerInfoTypes.FETCH_PLAYER_CHAMPION_RANKS:\r\n            return {...state, isPlayerChampionsLoading: true}\r\n        case PlayerInfoTypes.FETCH_PLAYER_CHAMPION_RANKS_SUCCESS:\r\n            return {...state, championRanks: action.payload}\r\n        case PlayerInfoTypes.FETCH_PLAYER_CHAMPION_RANKS_BATCH:\r\n            return {...state, championRanksBatch: action.payload, isPlayerChampionsLoading: false}\r\n        case PlayerInfoTypes.GET_PLAYER_STATUS:\r\n            return {...state, status: action.payload, isPlayerStatusLoading: true}\r\n        case PlayerInfoTypes.GET_PLAYER_STATUS_DESC:\r\n            return {...state, statusDesc: action.payload}\r\n        case PlayerInfoTypes.GET_PLAYER_MATCH_HISTORY:\r\n            return {...state, isMatchHistoryLoading: true}\r\n        case PlayerInfoTypes.GET_PLAYER_MATCH_HISTORY_SUCCESS:\r\n            return {...state, isMatchHistoryLoading: false, matchHistory: action.payload}\r\n        case PlayerInfoTypes.FETCH_PLAYER_ERROR:\r\n            return {...state, isPlayerNameNotFound: true, isLoading: false}\r\n        case PlayerInfoTypes.UNMOUNT_PLAYER_NOT_FOUND:\r\n            return {...state, isPlayerNameNotFound: false}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default playerInfoReducer"]},"metadata":{},"sourceType":"module"}