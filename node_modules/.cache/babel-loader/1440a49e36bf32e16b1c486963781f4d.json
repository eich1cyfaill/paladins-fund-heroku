{"ast":null,"code":"import { devActionTypes } from \"../../types/devTypes\";\nimport axios from \"axios\";\nimport { devID } from \"../../DAL/indexAPI\";\nimport { signatureDI, signatureMethod, signatureAPI, signature } from \"../../lib/signature\";\nimport { resDate } from '../../lib/date';\nexport const createSession = () => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: devActionTypes.CHANGE_SIGNATURE,\n        payload: signature(signatureDI, signatureMethod, signatureAPI, resDate())\n      });\n      const response = await axios.get(`https://cors-anywhere.herokuapp.com/https://api.paladins.com/paladinsapi.svc/createsessionJson/${devID}/${signature(signatureDI, \"createsession\", signatureAPI, resDate())}/${resDate()}`);\n      console.log(response);\n      dispatch({\n        type: devActionTypes.CHANGE_SESSION_ID,\n        payload: response.data.session_id\n      });\n    } catch (e) {\n      console.error('Error to createSession');\n    }\n  };\n};\nexport const DevGetPlayer = sessionID => {\n  return async dispatch => {\n    try {\n      const response = await axios.get(`https://cors-anywhere.herokuapp.com/https://api.paladins.com/paladinsapi.svc/getplayerjson/${devID}/${signature(signatureDI, \"getplayer\", signatureAPI, resDate())}/${sessionID}/${resDate()}/YaNeZnalShoEi14`);\n      console.log(response);\n    } catch (e) {\n      console.error('Error to DevGetPlayer');\n    }\n  };\n};\n_c = DevGetPlayer;\nexport const DevGetDataUsage = sessionID => {\n  return async dispatch => {\n    try {\n      const response = await axios.get(`https://cors-anywhere.herokuapp.com/https://api.paladins.com/paladinsapi.svc/getdatausedjson/${devID}/${signature(signatureDI, \"getdataused\", signatureAPI, resDate())}/${sessionID}/${resDate()}`);\n      console.log(response);\n    } catch (e) {\n      console.error('ERROR DUE GET DATAUSAGE');\n    }\n  };\n};\n_c2 = DevGetDataUsage;\nexport const DevGetChampionRanks = sessionID => {\n  return async dispatch => {\n    const response = await axios.get(`https://cors-anywhere.herokuapp.com/https://api.paladins.com/paladinsapi.svc/getchampionranksjson/${devID}/${signature(signatureDI, \"getchampionranks\", signatureAPI, resDate())}/${sessionID}/${resDate()}/Chotebe`);\n    console.log(response);\n  };\n};\n_c3 = DevGetChampionRanks;\nexport const DevGetMatchHistory = function (sessionID) {\n  let limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n  return async dispatch => {\n    const response = await axios.get(`https://cors-anywhere.herokuapp.com/https://api.paladins.com/paladinsapi.svc/getmatchhistoryjson/${devID}/${signature(signatureDI, \"getmatchhistory\", signatureAPI, resDate())}/${sessionID}/${resDate()}/YaNeZnalShoEi14`, {\n      params: {\n        _limit: limit\n      }\n    });\n    console.log(response);\n  };\n};\n_c4 = DevGetMatchHistory;\nexport const DevGetMatchDetails = sessionID => {\n  return async dispatch => {\n    const response = await axios.get(`https://cors-anywhere.herokuapp.com/https://api.paladins.com/paladinsapi.svc/getmatchdetailsjson/${devID}/${signature(signatureDI, \"getmatchdetails\", signatureAPI, resDate())}/${sessionID}/${resDate()}/1150371463`);\n    console.log(response);\n  };\n};\n_c5 = DevGetMatchDetails;\nexport const DevGetMatchDetailsBatch = sessionID => {\n  return async dispatch => {\n    const response = await axios.get(`https://cors-anywhere.herokuapp.com/https://api.paladins.com/paladinsapi.svc/getmatchdetailsbatchjson/${devID}/${signature(signatureDI, \"getmatchdetailsbatch\", signatureAPI, resDate())}/${sessionID}/${resDate()}/1151012281`);\n    console.log(response);\n  };\n};\n_c6 = DevGetMatchDetailsBatch;\nexport const DevGetMatchPlayerDetails = sessionID => {\n  return async dispatch => {\n    const response = await axios.get(`https://cors-anywhere.herokuapp.com/https://api.paladins.com/paladinsapi.svc/getmatchdetailsbatchjson/${devID}/${signature(signatureDI, \"getmatchdetailsbatch\", signatureAPI, resDate())}/${sessionID}/${resDate()}/1151012281`);\n    console.log('GET MATCH DETAILS PLAYER', response);\n  };\n};\n_c7 = DevGetMatchPlayerDetails;\nexport const DevGetMotD = sessionID => {\n  return async dispatch => {\n    const response = await axios.get(`https://cors-anywhere.herokuapp.com/https://api.paladins.com/paladinsapi.svc/getmotdjson/${devID}/${signature(signatureDI, \"getmotd\", signatureAPI, resDate())}/${sessionID}/${resDate()}`);\n    console.log(response);\n  };\n};\n_c8 = DevGetMotD;\nexport const DevGetLeagueSeasons = sessionID => {\n  return async dispatch => {\n    const response = await axios.get(`https://cors-anywhere.herokuapp.com/https://api.paladins.com/paladinsapi.svc/getleagueseasonsjson/${devID}/${signature(signatureDI, \"getleagueseasons\", signatureAPI, resDate())}/${sessionID}/${resDate()}/486`);\n    console.log(response);\n  };\n};\n_c9 = DevGetLeagueSeasons;\nexport const DevGetLeagueLeaderboard = sessionID => {\n  return async dispatch => {\n    const response = await axios.get(`https://cors-anywhere.herokuapp.com/https://api.paladins.com/paladinsapi.svc/getleagueleaderboardjson/${devID}/${signature(signatureDI, \"getleagueleaderboard\", signatureAPI, resDate())}/${sessionID}/${resDate()}/486/26/1`);\n    console.log(response);\n  };\n};\n_c10 = DevGetLeagueLeaderboard;\nexport const DevGetTopMatches = sessionID => {\n  return async dispatch => {\n    const response = await axios.get(`https://cors-anywhere.herokuapp.com/https://api.paladins.com/paladinsapi.svc/gettopmatchesjson/${devID}/${signature(signatureDI, \"gettopmatches\", signatureAPI, resDate())}/${sessionID}/${resDate()}`);\n    console.log(response);\n  };\n};\n_c11 = DevGetTopMatches;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n\n$RefreshReg$(_c, \"DevGetPlayer\");\n$RefreshReg$(_c2, \"DevGetDataUsage\");\n$RefreshReg$(_c3, \"DevGetChampionRanks\");\n$RefreshReg$(_c4, \"DevGetMatchHistory\");\n$RefreshReg$(_c5, \"DevGetMatchDetails\");\n$RefreshReg$(_c6, \"DevGetMatchDetailsBatch\");\n$RefreshReg$(_c7, \"DevGetMatchPlayerDetails\");\n$RefreshReg$(_c8, \"DevGetMotD\");\n$RefreshReg$(_c9, \"DevGetLeagueSeasons\");\n$RefreshReg$(_c10, \"DevGetLeagueLeaderboard\");\n$RefreshReg$(_c11, \"DevGetTopMatches\");","map":{"version":3,"sources":["D:/PetPS/react-ts-paladins-fund/src/store/actionCreators/devAC.ts"],"names":["devActionTypes","axios","devID","signatureDI","signatureMethod","signatureAPI","signature","resDate","createSession","dispatch","type","CHANGE_SIGNATURE","payload","response","get","console","log","CHANGE_SESSION_ID","data","session_id","e","error","DevGetPlayer","sessionID","DevGetDataUsage","DevGetChampionRanks","DevGetMatchHistory","limit","params","_limit","DevGetMatchDetails","DevGetMatchDetailsBatch","DevGetMatchPlayerDetails","DevGetMotD","DevGetLeagueSeasons","DevGetLeagueLeaderboard","DevGetTopMatches"],"mappings":"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","sourcesContent":["import { DevAction, devActionTypes } from \"../../types/devTypes\"\r\nimport { Dispatch } from \"redux\"\r\nimport axios from \"axios\"\r\nimport { devID, AuthKey } from \"../../DAL/indexAPI\"\r\nimport { signatureDI, signatureMethod, signatureAPI, signature } from \"../../lib/signature\"\r\nimport { resDate } from '../../lib/date'\r\nimport md5 from \"blueimp-md5\"\r\nimport { useTypeSelector } from \"../../hooks/useTypeSelector\"\r\n\r\n\r\n\r\n\r\nexport const createSession = () => {\r\n    return async (dispatch: Dispatch<DevAction>) => {\r\n        try{\r\n            dispatch({type: devActionTypes.CHANGE_SIGNATURE, payload: signature(signatureDI, signatureMethod, signatureAPI, resDate())})\r\n            const response = await axios.get(`https://cors-anywhere.herokuapp.com/https://api.paladins.com/paladinsapi.svc/createsessionJson/${devID}/${signature(signatureDI, \"createsession\", signatureAPI, resDate())}/${resDate()}`)\r\n            console.log(response)\r\n            dispatch({type: devActionTypes.CHANGE_SESSION_ID, payload: response.data.session_id})\r\n        } catch(e) {\r\n            console.error('Error to createSession')\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const DevGetPlayer = (sessionID: string) => {\r\n    return async (dispatch: Dispatch<DevAction>) => {\r\n        try {\r\n            const response = await axios.get(`https://cors-anywhere.herokuapp.com/https://api.paladins.com/paladinsapi.svc/getplayerjson/${devID}/${signature(signatureDI, \"getplayer\", signatureAPI, resDate())}/${sessionID}/${resDate()}/YaNeZnalShoEi14`)\r\n            console.log(response)\r\n        } catch (e) {\r\n            console.error('Error to DevGetPlayer')\r\n        }\r\n    }\r\n}\r\n\r\nexport const DevGetDataUsage = (sessionID: string) => {\r\n    return async (dispatch: Dispatch<DevAction>) => {\r\n        try {\r\n            const response = await axios.get(`https://cors-anywhere.herokuapp.com/https://api.paladins.com/paladinsapi.svc/getdatausedjson/${devID}/${signature(signatureDI, \"getdataused\", signatureAPI, resDate())}/${sessionID}/${resDate()}`)\r\n            console.log(response)\r\n        } catch (e) {\r\n            console.error('ERROR DUE GET DATAUSAGE')\r\n        }\r\n    }\r\n}\r\n\r\nexport const DevGetChampionRanks = (sessionID: string) => {\r\n    return async (dispatch: Dispatch<DevAction>) => {\r\n        const response = await axios.get(`https://cors-anywhere.herokuapp.com/https://api.paladins.com/paladinsapi.svc/getchampionranksjson/${devID}/${signature(signatureDI, \"getchampionranks\", signatureAPI, resDate())}/${sessionID}/${resDate()}/Chotebe`)\r\n        console.log(response)\r\n    }\r\n}\r\n\r\nexport const DevGetMatchHistory = (sessionID: string, limit = 10) => {\r\n    return async (dispatch: Dispatch<DevAction>) => {\r\n        const response = await axios.get(`https://cors-anywhere.herokuapp.com/https://api.paladins.com/paladinsapi.svc/getmatchhistoryjson/${devID}/${signature(signatureDI, \"getmatchhistory\", signatureAPI, resDate())}/${sessionID}/${resDate()}/YaNeZnalShoEi14`, {\r\n            params: {\r\n                _limit: limit\r\n            }\r\n        })\r\n        console.log(response)\r\n    }\r\n}\r\n\r\nexport const DevGetMatchDetails = (sessionID: string) => {\r\n    return async (dispatch: Dispatch<DevAction>) => {\r\n        const response = await axios.get(`https://cors-anywhere.herokuapp.com/https://api.paladins.com/paladinsapi.svc/getmatchdetailsjson/${devID}/${signature(signatureDI, \"getmatchdetails\", signatureAPI, resDate())}/${sessionID}/${resDate()}/1150371463`)\r\n        console.log(response)\r\n    }\r\n}\r\n\r\nexport const DevGetMatchDetailsBatch = (sessionID: string) => {\r\n    return async (dispatch: Dispatch<DevAction>) => {\r\n        const response = await axios.get(`https://cors-anywhere.herokuapp.com/https://api.paladins.com/paladinsapi.svc/getmatchdetailsbatchjson/${devID}/${signature(signatureDI, \"getmatchdetailsbatch\", signatureAPI, resDate())}/${sessionID}/${resDate()}/1151012281`)\r\n        console.log(response)\r\n    }\r\n}\r\n\r\nexport const DevGetMatchPlayerDetails = (sessionID: string) => {\r\n    return async(dispatch: Dispatch<DevAction>) => {\r\n        const response = await axios.get(`https://cors-anywhere.herokuapp.com/https://api.paladins.com/paladinsapi.svc/getmatchdetailsbatchjson/${devID}/${signature(signatureDI, \"getmatchdetailsbatch\", signatureAPI, resDate())}/${sessionID}/${resDate()}/1151012281`)\r\n        console.log('GET MATCH DETAILS PLAYER', response)\r\n    }\r\n}\r\n\r\nexport const DevGetMotD = (sessionID: string) => {\r\n    return async(dispatch: Dispatch<DevAction>) => {\r\n        const response = await axios.get(`https://cors-anywhere.herokuapp.com/https://api.paladins.com/paladinsapi.svc/getmotdjson/${devID}/${signature(signatureDI, \"getmotd\", signatureAPI, resDate())}/${sessionID}/${resDate()}`)\r\n        console.log(response)\r\n    }\r\n}\r\n\r\nexport const DevGetLeagueSeasons = (sessionID: string) => {\r\n    return async(dispatch: Dispatch<DevAction>) => {\r\n        const response = await axios.get(`https://cors-anywhere.herokuapp.com/https://api.paladins.com/paladinsapi.svc/getleagueseasonsjson/${devID}/${signature(signatureDI, \"getleagueseasons\", signatureAPI, resDate())}/${sessionID}/${resDate()}/486`)\r\n        console.log(response)\r\n    }\r\n}\r\n\r\nexport const DevGetLeagueLeaderboard = (sessionID: string) => {\r\n    return async(dispatch: Dispatch<DevAction>) => {\r\n        const response = await axios.get(`https://cors-anywhere.herokuapp.com/https://api.paladins.com/paladinsapi.svc/getleagueleaderboardjson/${devID}/${signature(signatureDI, \"getleagueleaderboard\", signatureAPI, resDate())}/${sessionID}/${resDate()}/486/26/1`)\r\n        console.log(response)\r\n    }\r\n}\r\n\r\nexport const DevGetTopMatches = (sessionID: string) => {\r\n    return async(dispatch: Dispatch<DevAction>) => {\r\n        const response = await axios.get(`https://cors-anywhere.herokuapp.com/https://api.paladins.com/paladinsapi.svc/gettopmatchesjson/${devID}/${signature(signatureDI, \"gettopmatches\", signatureAPI, resDate())}/${sessionID}/${resDate()}`)\r\n        console.log(response)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}