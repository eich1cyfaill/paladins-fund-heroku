{"ast":null,"code":"export let PlayerInfoTypes;\n\n(function (PlayerInfoTypes) {\n  PlayerInfoTypes[\"FETCH_PLAYER\"] = \"FETCH_PLAYER\";\n  PlayerInfoTypes[\"FETCH_PLAYER_SUCCESS\"] = \"FETCH_PLAYER_SUCCESS\";\n  PlayerInfoTypes[\"FETCH_PLAYER_ERROR\"] = \"FETCH_PLAYER_ERROR\";\n  PlayerInfoTypes[\"FETCH_PLAYER_CHAMPION_RANKS\"] = \"FETCH_PLAYER_CHAMPION_RANKS\";\n  PlayerInfoTypes[\"FETCH_PLAYER_CHAMPION_RANKS_SUCCESS\"] = \"FETCH_PLAYER_CHAMPION_RANKS_SUCCESS\";\n  PlayerInfoTypes[\"FETCH_PLAYER_CHAMPION_RANKS_ERROR\"] = \"FETCH_PLAYER_CHAMPION_RANKS_ERROR\";\n  PlayerInfoTypes[\"FETCH_PLAYER_CHAMPION_RANKS_BATCH\"] = \"FETCH_PLAYER_CHAMPION_RANKS_BATCH\";\n  PlayerInfoTypes[\"GET_PLAYER_STATUS\"] = \"GET_PLAYER_STATUS\";\n  PlayerInfoTypes[\"GET_PLAYER_STATUS_DESC\"] = \"GET_PLAYER_STATUS_DESC\";\n  PlayerInfoTypes[\"GET_PLAYER_STATUS_SUCCESS\"] = \"GET_PLAYER_STATUS_SUCCESS\";\n  PlayerInfoTypes[\"GET_PLAYER_MATCH_HISTORY\"] = \"GET_PLAYER_MATCH_HISTORY\";\n  PlayerInfoTypes[\"GET_PLAYER_MATCH_HISTORY_SUCCESS\"] = \"GET_PLAYER_MATCH_HISTORY_SUCCESS\";\n  PlayerInfoTypes[\"GET_PLAYER_MATCH_HISTORY_ERROR\"] = \"GET_PLAYER_MATCH_HISTORY_ERROR\";\n  PlayerInfoTypes[\"FETCH_CURRENT_PICKED_MATCH_ID\"] = \"FETCH_CURRENT_PICKED_MATCH_ID\";\n  PlayerInfoTypes[\"UNMOUNT_PLAYER_NOT_FOUND\"] = \"UNMOUNT_PLAYER_NOT_FOUND\";\n})(PlayerInfoTypes || (PlayerInfoTypes = {}));","map":{"version":3,"sources":["D:/PetPS/react-ts-paladins-fund/src/types/playerInfoTypes.ts"],"names":["PlayerInfoTypes"],"mappings":"AAEA,WAAYA,eAAZ;;WAAYA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;GAAAA,e,KAAAA,e","sourcesContent":["import { ChampionObject } from \"./championListTypes\";\r\n\r\nexport enum PlayerInfoTypes {\r\n    FETCH_PLAYER = \"FETCH_PLAYER\",\r\n    FETCH_PLAYER_SUCCESS = \"FETCH_PLAYER_SUCCESS\",\r\n    FETCH_PLAYER_ERROR = \"FETCH_PLAYER_ERROR\",\r\n    FETCH_PLAYER_CHAMPION_RANKS = \"FETCH_PLAYER_CHAMPION_RANKS\",\r\n    FETCH_PLAYER_CHAMPION_RANKS_SUCCESS = \"FETCH_PLAYER_CHAMPION_RANKS_SUCCESS\",\r\n    FETCH_PLAYER_CHAMPION_RANKS_ERROR = \"FETCH_PLAYER_CHAMPION_RANKS_ERROR\",\r\n    FETCH_PLAYER_CHAMPION_RANKS_BATCH = \"FETCH_PLAYER_CHAMPION_RANKS_BATCH\",\r\n    GET_PLAYER_STATUS = \"GET_PLAYER_STATUS\",\r\n    GET_PLAYER_STATUS_DESC = \"GET_PLAYER_STATUS_DESC\",\r\n    GET_PLAYER_STATUS_SUCCESS = \"GET_PLAYER_STATUS_SUCCESS\",\r\n    GET_PLAYER_MATCH_HISTORY = \"GET_PLAYER_MATCH_HISTORY\",\r\n    GET_PLAYER_MATCH_HISTORY_SUCCESS = \"GET_PLAYER_MATCH_HISTORY_SUCCESS\",\r\n    GET_PLAYER_MATCH_HISTORY_ERROR = \"GET_PLAYER_MATCH_HISTORY_ERROR\",\r\n    FETCH_CURRENT_PICKED_MATCH_ID = \"FETCH_CURRENT_PICKED_MATCH_ID\",\r\n    UNMOUNT_PLAYER_NOT_FOUND = \"UNMOUNT_PLAYER_NOT_FOUND\"\r\n}\r\n\r\n\r\nexport interface IPlayerInfoIniState {\r\n    isPlayerNameNotFound: boolean\r\n    matchHistory: any[],\r\n    isMatchHistoryLoading: boolean,\r\n    isPlayerStatusLoading: boolean,\r\n    isPlayerChampionsLoading: boolean,\r\n    isPlayerInfoLoading: boolean\r\n    championRanks: any[]\r\n    championRanksBatch: any[]\r\n    isLoading: boolean\r\n    activePlayerId: number\r\n    avatarId: number\r\n    avatarURL: string\r\n    createdDatetime: string\r\n    hoursPlayed: number\r\n    id: number\r\n    lastLoginDatetime: string\r\n    level: number\r\n    losses: number\r\n    masteryLevel: number\r\n    PlatformName: string\r\n    platform: string\r\n    region: string\r\n    wins: number\r\n    hzPlayerName: string\r\n    status: number | any | bigint\r\n    statusDesc: string\r\n    rankedStats: ranked,\r\n    currentPickedMatchId: number\r\n}\r\n\r\ninterface ranked {\r\n    Tier: number\r\n    Losses: number\r\n    points: number\r\n    prevRank: number\r\n    rank: number\r\n    season: number\r\n    Wins: number\r\n}\r\n\r\n\r\n\r\nexport interface IFetchPlayer {\r\n    type: PlayerInfoTypes.FETCH_PLAYER\r\n}\r\n\r\nexport interface IFetchPlayerSuccess {\r\n    type: PlayerInfoTypes.FETCH_PLAYER_SUCCESS\r\n    payload: any[]\r\n}\r\n\r\nexport interface IFetchPlayerError {\r\n    type: PlayerInfoTypes.FETCH_PLAYER_ERROR\r\n}\r\n\r\nexport interface IFetchPlayerChampionRanks {\r\n    type: PlayerInfoTypes.FETCH_PLAYER_CHAMPION_RANKS\r\n}\r\n\r\nexport interface IFetchPlayerChampionRanksSuccess {\r\n    type: PlayerInfoTypes.FETCH_PLAYER_CHAMPION_RANKS_SUCCESS\r\n    payload: []\r\n}\r\n\r\nexport interface IFetchPlayerChampionRanksError {\r\n    type: PlayerInfoTypes.FETCH_PLAYER_CHAMPION_RANKS_ERROR\r\n    payload: string\r\n}\r\n\r\nexport interface IFetchPlayerChampionRanksBatch {\r\n    type: PlayerInfoTypes.FETCH_PLAYER_CHAMPION_RANKS_BATCH,\r\n    payload: any[]\r\n}\r\n\r\nexport interface IGetPlayerStatus {\r\n    type: PlayerInfoTypes.GET_PLAYER_STATUS,\r\n    payload: number\r\n}\r\n\r\nexport interface IGetPLayerStatusDescription {\r\n    type: PlayerInfoTypes.GET_PLAYER_STATUS_DESC,\r\n    payload: string\r\n}\r\n\r\nexport interface IGetPlayerStatusSuccess {\r\n    type: PlayerInfoTypes.GET_PLAYER_STATUS_SUCCESS,\r\n}\r\n\r\nexport interface IGetPlayerMatchHistory {\r\n    type: PlayerInfoTypes.GET_PLAYER_MATCH_HISTORY\r\n}\r\n\r\nexport interface IGetPlayerMatchHistorySuccess {\r\n    type: PlayerInfoTypes.GET_PLAYER_MATCH_HISTORY_SUCCESS\r\n    payload: any[]\r\n}\r\n\r\nexport interface IGetPlayerMatchHistoryError {\r\n    type: PlayerInfoTypes.GET_PLAYER_MATCH_HISTORY_ERROR\r\n    payload: string\r\n}\r\n\r\nexport interface IFetchCurrentPickedMatchId {\r\n    type: PlayerInfoTypes.FETCH_CURRENT_PICKED_MATCH_ID\r\n    payload: number\r\n}\r\n\r\nexport interface IUnmountPlayerNotFound {\r\n    type: PlayerInfoTypes.UNMOUNT_PLAYER_NOT_FOUND\r\n}\r\n\r\nexport type PlayerInfoAction = IFetchPlayer | IFetchPlayerSuccess | IFetchPlayerError |\r\n    IFetchPlayerChampionRanks | IFetchPlayerChampionRanksSuccess | IFetchPlayerChampionRanksError |\r\n    IFetchPlayerChampionRanksBatch | IGetPlayerStatus | IGetPLayerStatusDescription | IGetPlayerStatusSuccess | IGetPlayerMatchHistory |\r\n    IGetPlayerMatchHistorySuccess | IGetPlayerMatchHistoryError | IFetchCurrentPickedMatchId | IUnmountPlayerNotFound\r\n"]},"metadata":{},"sourceType":"module"}